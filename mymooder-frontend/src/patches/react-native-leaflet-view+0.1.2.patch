diff --git a/node_modules/react-native-leaflet-view/lib/commonjs/LeafletView/index.js b/node_modules/react-native-leaflet-view/lib/commonjs/LeafletView/index.js
index b76afb4..6ce1472 100644
--- a/node_modules/react-native-leaflet-view/lib/commonjs/LeafletView/index.js
+++ b/node_modules/react-native-leaflet-view/lib/commonjs/LeafletView/index.js
@@ -22,10 +22,9 @@ function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "functio
 function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
 
 const LEAFLET_HTML_SOURCE = _reactNative.Platform.select({
-  ios: require('../../android/src/main/assets/leaflet.html'),
-  android: {
-    uri: 'file:///android_asset/leaflet.html'
-  }
+  ios: require('../../../android/src/main/assets/leaflet.html'),
+  android: require('../../../android/src/main/assets/leaflet.html'),
+  web: require('../../../android/src/main/assets/leaflet.html')
 });
 
 const DEFAULT_MAP_LAYERS = [{
diff --git a/node_modules/react-native-leaflet-view/lib/commonjs/LeafletView/index.js.map b/node_modules/react-native-leaflet-view/lib/commonjs/LeafletView/index.js.map
index d61318c..6d91357 100644
--- a/node_modules/react-native-leaflet-view/lib/commonjs/LeafletView/index.js.map
+++ b/node_modules/react-native-leaflet-view/lib/commonjs/LeafletView/index.js.map
@@ -1 +1 @@
-{"version":3,"sources":["index.tsx"],"names":["LEAFLET_HTML_SOURCE","Platform","select","ios","require","android","uri","DEFAULT_MAP_LAYERS","attribution","baseLayerIsChecked","baseLayerName","url","DEFAULT_ZOOM","LeafletView","renderLoading","onError","onLoadEnd","onLoadStart","onMessageReceived","mapLayers","mapMarkers","mapShapes","mapCenterPosition","ownPositionMarker","zoom","doDebug","androidHardwareAccelerationDisabled","webViewRef","initialized","setInitialized","logMessage","message","console","log","sendMessage","payload","JSON","stringify","current","injectJavaScript","sendInitialMessage","startupMessage","id","OWN_POSTION_MARKER_ID","handleMessage","event","data","nativeEvent","parse","msg","WebViewLeafletEvents","MAP_READY","ON_MOVE_END","styles","container","defaultProps","__DEV__","StyleSheet","create","flex","absoluteFillObject"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { WebView } from 'react-native-webview';\nimport {\n  MapMarker,\n  WebviewLeafletMessage,\n  MapMessage,\n  WebViewLeafletEvents,\n  MapLayer,\n  MapShape,\n  OwnPositionMarker,\n  OWN_POSTION_MARKER_ID,\n} from './types';\nimport { LatLng } from 'react-leaflet';\nimport { NativeSyntheticEvent, Platform, StyleSheet } from 'react-native';\nimport {\n  WebViewError,\n  WebViewMessageEvent,\n} from 'react-native-webview/lib/WebViewTypes';\nimport LoadingIndicator from '../LoadingIndicator';\n\nconst LEAFLET_HTML_SOURCE = Platform.select({\n  ios: require('../../android/src/main/assets/leaflet.html'),\n  android: { uri: 'file:///android_asset/leaflet.html' },\n});\n\nconst DEFAULT_MAP_LAYERS = [\n  {\n    attribution:\n      '&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    baseLayerIsChecked: true,\n    baseLayerName: 'OpenStreetMap.Mapnik',\n    url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n  },\n];\n\nconst DEFAULT_ZOOM = 15;\n\nexport type LeafletViewProps = {\n  renderLoading?: () => React.ReactElement;\n  onError?: (syntheticEvent: NativeSyntheticEvent<WebViewError>) => void;\n  onLoadEnd?: () => void;\n  onLoadStart?: () => void;\n  onMessageReceived?: (message: WebviewLeafletMessage) => void;\n  mapLayers?: MapLayer[];\n  mapMarkers?: MapMarker[];\n  mapShapes?: MapShape[];\n  mapCenterPosition?: LatLng;\n  ownPositionMarker?: OwnPositionMarker;\n  zoom?: number;\n  doDebug?: boolean;\n  androidHardwareAccelerationDisabled?: boolean;\n};\n\nconst LeafletView: React.FC<LeafletViewProps> = ({\n  renderLoading,\n  onError,\n  onLoadEnd,\n  onLoadStart,\n  onMessageReceived,\n  mapLayers,\n  mapMarkers,\n  mapShapes,\n  mapCenterPosition,\n  ownPositionMarker,\n  zoom,\n  doDebug,\n  androidHardwareAccelerationDisabled,\n}) => {\n  const webViewRef = useRef<WebView>(null);\n  const [initialized, setInitialized] = useState(false);\n\n  const logMessage = useCallback(\n    (message: string) => {\n      if (doDebug) {\n        console.log(message);\n      }\n    },\n    [doDebug]\n  );\n\n  const sendMessage = useCallback(\n    (payload: MapMessage) => {\n      logMessage(`sending: ${JSON.stringify(payload)}`);\n\n      webViewRef.current?.injectJavaScript(\n        `window.postMessage(${JSON.stringify(payload)}, '*');`\n      );\n    },\n    [logMessage]\n  );\n\n  const sendInitialMessage = useCallback(() => {\n    let startupMessage: MapMessage = {};\n\n    if (mapLayers) {\n      startupMessage.mapLayers = mapLayers;\n    }\n    if (mapMarkers) {\n      startupMessage.mapMarkers = mapMarkers;\n    }\n    if (mapCenterPosition) {\n      startupMessage.mapCenterPosition = mapCenterPosition;\n    }\n    if (mapShapes) {\n      startupMessage.mapShapes = mapShapes;\n    }\n    if (ownPositionMarker) {\n      startupMessage.ownPositionMarker = {\n        ...ownPositionMarker,\n        id: OWN_POSTION_MARKER_ID,\n      };\n    }\n    startupMessage.zoom = zoom;\n\n    sendMessage(startupMessage);\n    setInitialized(true);\n    logMessage('sending initial message');\n  }, [\n    logMessage,\n    mapCenterPosition,\n    mapLayers,\n    mapMarkers,\n    mapShapes,\n    ownPositionMarker,\n    sendMessage,\n    zoom,\n  ]);\n\n  const handleMessage = useCallback(\n    (event: WebViewMessageEvent) => {\n      const data = event?.nativeEvent?.data;\n      if (!data) {\n        return;\n      }\n\n      const message: WebviewLeafletMessage = JSON.parse(data);\n      logMessage(`received: ${JSON.stringify(message)}`);\n\n      if (message.msg === WebViewLeafletEvents.MAP_READY) {\n        sendInitialMessage();\n      }\n      if (message.event === WebViewLeafletEvents.ON_MOVE_END) {\n        logMessage(\n          `moved to: ${JSON.stringify(message.payload?.mapCenterPosition)}`\n        );\n      }\n\n      onMessageReceived && onMessageReceived(message);\n    },\n    [logMessage, onMessageReceived, sendInitialMessage]\n  );\n\n  //Handle mapLayers update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapLayers });\n  }, [initialized, mapLayers, sendMessage]);\n\n  //Handle mapMarkers update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapMarkers });\n  }, [initialized, mapMarkers, sendMessage]);\n\n  //Handle mapShapes update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapShapes });\n  }, [initialized, mapShapes, sendMessage]);\n\n  //Handle ownPositionMarker update\n  useEffect(() => {\n    if (!initialized || !ownPositionMarker) {\n      return;\n    }\n    sendMessage({ ownPositionMarker });\n  }, [initialized, ownPositionMarker, sendMessage]);\n\n  //Handle mapCenterPosition update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapCenterPosition });\n  }, [initialized, mapCenterPosition, sendMessage]);\n\n  //Handle zoom update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ zoom });\n  }, [initialized, zoom, sendMessage]);\n\n  return (\n    <WebView\n      containerStyle={styles.container}\n      ref={webViewRef}\n      javaScriptEnabled={true}\n      onLoadEnd={onLoadEnd}\n      onLoadStart={onLoadStart}\n      onMessage={handleMessage}\n      domStorageEnabled={true}\n      startInLoadingState={true}\n      onError={onError}\n      originWhitelist={['*']}\n      renderLoading={renderLoading}\n      source={LEAFLET_HTML_SOURCE}\n      allowFileAccess={true}\n      allowUniversalAccessFromFileURLs={true}\n      allowFileAccessFromFileURLs={true}\n      androidHardwareAccelerationDisabled={androidHardwareAccelerationDisabled}\n    />\n  );\n};\n\nLeafletView.defaultProps = {\n  renderLoading: () => <LoadingIndicator />,\n  mapLayers: DEFAULT_MAP_LAYERS,\n  zoom: DEFAULT_ZOOM,\n  doDebug: __DEV__,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...StyleSheet.absoluteFillObject,\n  },\n});\n\nexport default LeafletView;\n"]}
\ No newline at end of file
+{"version":3,"sources":["index.tsx"],"names":["LEAFLET_HTML_SOURCE","Platform","select","ios","require","android","uri","DEFAULT_MAP_LAYERS","attribution","baseLayerIsChecked","baseLayerName","url","DEFAULT_ZOOM","LeafletView","renderLoading","onError","onLoadEnd","onLoadStart","onMessageReceived","mapLayers","mapMarkers","mapShapes","mapCenterPosition","ownPositionMarker","zoom","doDebug","androidHardwareAccelerationDisabled","webViewRef","initialized","setInitialized","logMessage","message","console","log","sendMessage","payload","JSON","stringify","current","injectJavaScript","sendInitialMessage","startupMessage","id","OWN_POSTION_MARKER_ID","handleMessage","event","data","nativeEvent","parse","msg","WebViewLeafletEvents","MAP_READY","ON_MOVE_END","styles","container","defaultProps","__DEV__","StyleSheet","create","flex","absoluteFillObject"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { WebView } from 'react-native-webview';\nimport {\n  MapMarker,\n  WebviewLeafletMessage,\n  MapMessage,\n  WebViewLeafletEvents,\n  MapLayer,\n  MapShape,\n  OwnPositionMarker,\n  OWN_POSTION_MARKER_ID,\n} from './types';\nimport { LatLng } from 'react-leaflet';\nimport { NativeSyntheticEvent, Platform, StyleSheet } from 'react-native';\nimport {\n  WebViewError,\n  WebViewMessageEvent,\n} from 'react-native-webview/lib/WebViewTypes';\nimport LoadingIndicator from '../LoadingIndicator';\n\nconst LEAFLET_HTML_SOURCE = Platform.select({\n  ios: require('../../../android/src/main/assets/leaflet.html'),\n  android: require('../../../android/src/main/assets/leaflet.html'),\n   web: require('../../../android/src/main/assets/leaflet.html')\n});\n\nconst DEFAULT_MAP_LAYERS = [\n  {\n    attribution:\n      '&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    baseLayerIsChecked: true,\n    baseLayerName: 'OpenStreetMap.Mapnik',\n    url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n  },\n];\n\nconst DEFAULT_ZOOM = 15;\n\nexport type LeafletViewProps = {\n  renderLoading?: () => React.ReactElement;\n  onError?: (syntheticEvent: NativeSyntheticEvent<WebViewError>) => void;\n  onLoadEnd?: () => void;\n  onLoadStart?: () => void;\n  onMessageReceived?: (message: WebviewLeafletMessage) => void;\n  mapLayers?: MapLayer[];\n  mapMarkers?: MapMarker[];\n  mapShapes?: MapShape[];\n  mapCenterPosition?: LatLng;\n  ownPositionMarker?: OwnPositionMarker;\n  zoom?: number;\n  doDebug?: boolean;\n  androidHardwareAccelerationDisabled?: boolean;\n};\n\nconst LeafletView: React.FC<LeafletViewProps> = ({\n  renderLoading,\n  onError,\n  onLoadEnd,\n  onLoadStart,\n  onMessageReceived,\n  mapLayers,\n  mapMarkers,\n  mapShapes,\n  mapCenterPosition,\n  ownPositionMarker,\n  zoom,\n  doDebug,\n  androidHardwareAccelerationDisabled,\n}) => {\n  const webViewRef = useRef<WebView>(null);\n  const [initialized, setInitialized] = useState(false);\n\n  const logMessage = useCallback(\n    (message: string) => {\n      if (doDebug) {\n        console.log(message);\n      }\n    },\n    [doDebug]\n  );\n\n  const sendMessage = useCallback(\n    (payload: MapMessage) => {\n      logMessage(`sending: ${JSON.stringify(payload)}`);\n\n      webViewRef.current?.injectJavaScript(\n        `window.postMessage(${JSON.stringify(payload)}, '*');`\n      );\n    },\n    [logMessage]\n  );\n\n  const sendInitialMessage = useCallback(() => {\n    let startupMessage: MapMessage = {};\n\n    if (mapLayers) {\n      startupMessage.mapLayers = mapLayers;\n    }\n    if (mapMarkers) {\n      startupMessage.mapMarkers = mapMarkers;\n    }\n    if (mapCenterPosition) {\n      startupMessage.mapCenterPosition = mapCenterPosition;\n    }\n    if (mapShapes) {\n      startupMessage.mapShapes = mapShapes;\n    }\n    if (ownPositionMarker) {\n      startupMessage.ownPositionMarker = {\n        ...ownPositionMarker,\n        id: OWN_POSTION_MARKER_ID,\n      };\n    }\n    startupMessage.zoom = zoom;\n\n    sendMessage(startupMessage);\n    setInitialized(true);\n    logMessage('sending initial message');\n  }, [\n    logMessage,\n    mapCenterPosition,\n    mapLayers,\n    mapMarkers,\n    mapShapes,\n    ownPositionMarker,\n    sendMessage,\n    zoom,\n  ]);\n\n  const handleMessage = useCallback(\n    (event: WebViewMessageEvent) => {\n      const data = event?.nativeEvent?.data;\n      if (!data) {\n        return;\n      }\n\n      const message: WebviewLeafletMessage = JSON.parse(data);\n      logMessage(`received: ${JSON.stringify(message)}`);\n\n      if (message.msg === WebViewLeafletEvents.MAP_READY) {\n        sendInitialMessage();\n      }\n      if (message.event === WebViewLeafletEvents.ON_MOVE_END) {\n        logMessage(\n          `moved to: ${JSON.stringify(message.payload?.mapCenterPosition)}`\n        );\n      }\n\n      onMessageReceived && onMessageReceived(message);\n    },\n    [logMessage, onMessageReceived, sendInitialMessage]\n  );\n\n  //Handle mapLayers update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapLayers });\n  }, [initialized, mapLayers, sendMessage]);\n\n  //Handle mapMarkers update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapMarkers });\n  }, [initialized, mapMarkers, sendMessage]);\n\n  //Handle mapShapes update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapShapes });\n  }, [initialized, mapShapes, sendMessage]);\n\n  //Handle ownPositionMarker update\n  useEffect(() => {\n    if (!initialized || !ownPositionMarker) {\n      return;\n    }\n    sendMessage({ ownPositionMarker });\n  }, [initialized, ownPositionMarker, sendMessage]);\n\n  //Handle mapCenterPosition update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapCenterPosition });\n  }, [initialized, mapCenterPosition, sendMessage]);\n\n  //Handle zoom update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ zoom });\n  }, [initialized, zoom, sendMessage]);\n\n  return (\n    <WebView\n      containerStyle={styles.container}\n      ref={webViewRef}\n      javaScriptEnabled={true}\n      onLoadEnd={onLoadEnd}\n      onLoadStart={onLoadStart}\n      onMessage={handleMessage}\n      domStorageEnabled={true}\n      startInLoadingState={true}\n      onError={onError}\n      originWhitelist={['*']}\n      renderLoading={renderLoading}\n      source={LEAFLET_HTML_SOURCE}\n      allowFileAccess={true}\n      allowUniversalAccessFromFileURLs={true}\n      allowFileAccessFromFileURLs={true}\n      androidHardwareAccelerationDisabled={androidHardwareAccelerationDisabled}\n    />\n  );\n};\n\nLeafletView.defaultProps = {\n  renderLoading: () => <LoadingIndicator />,\n  mapLayers: DEFAULT_MAP_LAYERS,\n  zoom: DEFAULT_ZOOM,\n  doDebug: __DEV__,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...StyleSheet.absoluteFillObject,\n  },\n});\n\nexport default LeafletView;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-leaflet-view/lib/module/LeafletView/index.js b/node_modules/react-native-leaflet-view/lib/module/LeafletView/index.js
index 5a04755..155b448 100644
--- a/node_modules/react-native-leaflet-view/lib/module/LeafletView/index.js
+++ b/node_modules/react-native-leaflet-view/lib/module/LeafletView/index.js
@@ -4,10 +4,8 @@ import { WebViewLeafletEvents, OWN_POSTION_MARKER_ID } from './types';
 import { Platform, StyleSheet } from 'react-native';
 import LoadingIndicator from '../LoadingIndicator';
 const LEAFLET_HTML_SOURCE = Platform.select({
-  ios: require('../../android/src/main/assets/leaflet.html'),
-  android: {
-    uri: 'file:///android_asset/leaflet.html'
-  }
+  ios: require('../../../android/src/main/assets/leaflet.html'),
+  android: require('../../../android/src/main/assets/leaflet.html'),
+  web: require('../../../android/src/main/assets/leaflet.html')
 });
 const DEFAULT_MAP_LAYERS = [{
   attribution: '&amp;copy <a href="http://osm.org/copyright">OpenStreetMap</a> contributors',
diff --git a/node_modules/react-native-leaflet-view/lib/module/LeafletView/index.js.map b/node_modules/react-native-leaflet-view/lib/module/LeafletView/index.js.map
index b8677d8..4be9646 100644
--- a/node_modules/react-native-leaflet-view/lib/module/LeafletView/index.js.map
+++ b/node_modules/react-native-leaflet-view/lib/module/LeafletView/index.js.map
@@ -1 +1 @@
-{"version":3,"sources":["index.tsx"],"names":["React","useCallback","useEffect","useRef","useState","WebView","WebViewLeafletEvents","OWN_POSTION_MARKER_ID","Platform","StyleSheet","LoadingIndicator","LEAFLET_HTML_SOURCE","select","ios","require","android","uri","DEFAULT_MAP_LAYERS","attribution","baseLayerIsChecked","baseLayerName","url","DEFAULT_ZOOM","LeafletView","renderLoading","onError","onLoadEnd","onLoadStart","onMessageReceived","mapLayers","mapMarkers","mapShapes","mapCenterPosition","ownPositionMarker","zoom","doDebug","androidHardwareAccelerationDisabled","webViewRef","initialized","setInitialized","logMessage","message","console","log","sendMessage","payload","JSON","stringify","current","injectJavaScript","sendInitialMessage","startupMessage","id","handleMessage","event","data","nativeEvent","parse","msg","MAP_READY","ON_MOVE_END","styles","container","defaultProps","__DEV__","create","flex","absoluteFillObject"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { WebView } from 'react-native-webview';\nimport {\n  MapMarker,\n  WebviewLeafletMessage,\n  MapMessage,\n  WebViewLeafletEvents,\n  MapLayer,\n  MapShape,\n  OwnPositionMarker,\n  OWN_POSTION_MARKER_ID,\n} from './types';\nimport { LatLng } from 'react-leaflet';\nimport { NativeSyntheticEvent, Platform, StyleSheet } from 'react-native';\nimport {\n  WebViewError,\n  WebViewMessageEvent,\n} from 'react-native-webview/lib/WebViewTypes';\nimport LoadingIndicator from '../LoadingIndicator';\n\nconst LEAFLET_HTML_SOURCE = Platform.select({\n  ios: require('../../android/src/main/assets/leaflet.html'),\n  android: { uri: 'file:///android_asset/leaflet.html' },\n});\n\nconst DEFAULT_MAP_LAYERS = [\n  {\n    attribution:\n      '&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    baseLayerIsChecked: true,\n    baseLayerName: 'OpenStreetMap.Mapnik',\n    url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n  },\n];\n\nconst DEFAULT_ZOOM = 15;\n\nexport type LeafletViewProps = {\n  renderLoading?: () => React.ReactElement;\n  onError?: (syntheticEvent: NativeSyntheticEvent<WebViewError>) => void;\n  onLoadEnd?: () => void;\n  onLoadStart?: () => void;\n  onMessageReceived?: (message: WebviewLeafletMessage) => void;\n  mapLayers?: MapLayer[];\n  mapMarkers?: MapMarker[];\n  mapShapes?: MapShape[];\n  mapCenterPosition?: LatLng;\n  ownPositionMarker?: OwnPositionMarker;\n  zoom?: number;\n  doDebug?: boolean;\n  androidHardwareAccelerationDisabled?: boolean;\n};\n\nconst LeafletView: React.FC<LeafletViewProps> = ({\n  renderLoading,\n  onError,\n  onLoadEnd,\n  onLoadStart,\n  onMessageReceived,\n  mapLayers,\n  mapMarkers,\n  mapShapes,\n  mapCenterPosition,\n  ownPositionMarker,\n  zoom,\n  doDebug,\n  androidHardwareAccelerationDisabled,\n}) => {\n  const webViewRef = useRef<WebView>(null);\n  const [initialized, setInitialized] = useState(false);\n\n  const logMessage = useCallback(\n    (message: string) => {\n      if (doDebug) {\n        console.log(message);\n      }\n    },\n    [doDebug]\n  );\n\n  const sendMessage = useCallback(\n    (payload: MapMessage) => {\n      logMessage(`sending: ${JSON.stringify(payload)}`);\n\n      webViewRef.current?.injectJavaScript(\n        `window.postMessage(${JSON.stringify(payload)}, '*');`\n      );\n    },\n    [logMessage]\n  );\n\n  const sendInitialMessage = useCallback(() => {\n    let startupMessage: MapMessage = {};\n\n    if (mapLayers) {\n      startupMessage.mapLayers = mapLayers;\n    }\n    if (mapMarkers) {\n      startupMessage.mapMarkers = mapMarkers;\n    }\n    if (mapCenterPosition) {\n      startupMessage.mapCenterPosition = mapCenterPosition;\n    }\n    if (mapShapes) {\n      startupMessage.mapShapes = mapShapes;\n    }\n    if (ownPositionMarker) {\n      startupMessage.ownPositionMarker = {\n        ...ownPositionMarker,\n        id: OWN_POSTION_MARKER_ID,\n      };\n    }\n    startupMessage.zoom = zoom;\n\n    sendMessage(startupMessage);\n    setInitialized(true);\n    logMessage('sending initial message');\n  }, [\n    logMessage,\n    mapCenterPosition,\n    mapLayers,\n    mapMarkers,\n    mapShapes,\n    ownPositionMarker,\n    sendMessage,\n    zoom,\n  ]);\n\n  const handleMessage = useCallback(\n    (event: WebViewMessageEvent) => {\n      const data = event?.nativeEvent?.data;\n      if (!data) {\n        return;\n      }\n\n      const message: WebviewLeafletMessage = JSON.parse(data);\n      logMessage(`received: ${JSON.stringify(message)}`);\n\n      if (message.msg === WebViewLeafletEvents.MAP_READY) {\n        sendInitialMessage();\n      }\n      if (message.event === WebViewLeafletEvents.ON_MOVE_END) {\n        logMessage(\n          `moved to: ${JSON.stringify(message.payload?.mapCenterPosition)}`\n        );\n      }\n\n      onMessageReceived && onMessageReceived(message);\n    },\n    [logMessage, onMessageReceived, sendInitialMessage]\n  );\n\n  //Handle mapLayers update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapLayers });\n  }, [initialized, mapLayers, sendMessage]);\n\n  //Handle mapMarkers update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapMarkers });\n  }, [initialized, mapMarkers, sendMessage]);\n\n  //Handle mapShapes update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapShapes });\n  }, [initialized, mapShapes, sendMessage]);\n\n  //Handle ownPositionMarker update\n  useEffect(() => {\n    if (!initialized || !ownPositionMarker) {\n      return;\n    }\n    sendMessage({ ownPositionMarker });\n  }, [initialized, ownPositionMarker, sendMessage]);\n\n  //Handle mapCenterPosition update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapCenterPosition });\n  }, [initialized, mapCenterPosition, sendMessage]);\n\n  //Handle zoom update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ zoom });\n  }, [initialized, zoom, sendMessage]);\n\n  return (\n    <WebView\n      containerStyle={styles.container}\n      ref={webViewRef}\n      javaScriptEnabled={true}\n      onLoadEnd={onLoadEnd}\n      onLoadStart={onLoadStart}\n      onMessage={handleMessage}\n      domStorageEnabled={true}\n      startInLoadingState={true}\n      onError={onError}\n      originWhitelist={['*']}\n      renderLoading={renderLoading}\n      source={LEAFLET_HTML_SOURCE}\n      allowFileAccess={true}\n      allowUniversalAccessFromFileURLs={true}\n      allowFileAccessFromFileURLs={true}\n      androidHardwareAccelerationDisabled={androidHardwareAccelerationDisabled}\n    />\n  );\n};\n\nLeafletView.defaultProps = {\n  renderLoading: () => <LoadingIndicator />,\n  mapLayers: DEFAULT_MAP_LAYERS,\n  zoom: DEFAULT_ZOOM,\n  doDebug: __DEV__,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...StyleSheet.absoluteFillObject,\n  },\n});\n\nexport default LeafletView;\n"]}
\ No newline at end of file
+{"version":3,"sources":["index.tsx"],"names":["React","useCallback","useEffect","useRef","useState","WebView","WebViewLeafletEvents","OWN_POSTION_MARKER_ID","Platform","StyleSheet","LoadingIndicator","LEAFLET_HTML_SOURCE","select","ios","require","android","uri","DEFAULT_MAP_LAYERS","attribution","baseLayerIsChecked","baseLayerName","url","DEFAULT_ZOOM","LeafletView","renderLoading","onError","onLoadEnd","onLoadStart","onMessageReceived","mapLayers","mapMarkers","mapShapes","mapCenterPosition","ownPositionMarker","zoom","doDebug","androidHardwareAccelerationDisabled","webViewRef","initialized","setInitialized","logMessage","message","console","log","sendMessage","payload","JSON","stringify","current","injectJavaScript","sendInitialMessage","startupMessage","id","handleMessage","event","data","nativeEvent","parse","msg","MAP_READY","ON_MOVE_END","styles","container","defaultProps","__DEV__","create","flex","absoluteFillObject"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { WebView } from 'react-native-webview';\nimport {\n  MapMarker,\n  WebviewLeafletMessage,\n  MapMessage,\n  WebViewLeafletEvents,\n  MapLayer,\n  MapShape,\n  OwnPositionMarker,\n  OWN_POSTION_MARKER_ID,\n} from './types';\nimport { LatLng } from 'react-leaflet';\nimport { NativeSyntheticEvent, Platform, StyleSheet } from 'react-native';\nimport {\n  WebViewError,\n  WebViewMessageEvent,\n} from 'react-native-webview/lib/WebViewTypes';\nimport LoadingIndicator from '../LoadingIndicator';\n\nconst LEAFLET_HTML_SOURCE = Platform.select({\n  ios: require('../../../android/src/main/assets/leaflet.html'),\n  android: require('../../../android/src/main/assets/leaflet.html'),\n   web: require('../../../android/src/main/assets/leaflet.html')},\n});\n\nconst DEFAULT_MAP_LAYERS = [\n  {\n    attribution:\n      '&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    baseLayerIsChecked: true,\n    baseLayerName: 'OpenStreetMap.Mapnik',\n    url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n  },\n];\n\nconst DEFAULT_ZOOM = 15;\n\nexport type LeafletViewProps = {\n  renderLoading?: () => React.ReactElement;\n  onError?: (syntheticEvent: NativeSyntheticEvent<WebViewError>) => void;\n  onLoadEnd?: () => void;\n  onLoadStart?: () => void;\n  onMessageReceived?: (message: WebviewLeafletMessage) => void;\n  mapLayers?: MapLayer[];\n  mapMarkers?: MapMarker[];\n  mapShapes?: MapShape[];\n  mapCenterPosition?: LatLng;\n  ownPositionMarker?: OwnPositionMarker;\n  zoom?: number;\n  doDebug?: boolean;\n  androidHardwareAccelerationDisabled?: boolean;\n};\n\nconst LeafletView: React.FC<LeafletViewProps> = ({\n  renderLoading,\n  onError,\n  onLoadEnd,\n  onLoadStart,\n  onMessageReceived,\n  mapLayers,\n  mapMarkers,\n  mapShapes,\n  mapCenterPosition,\n  ownPositionMarker,\n  zoom,\n  doDebug,\n  androidHardwareAccelerationDisabled,\n}) => {\n  const webViewRef = useRef<WebView>(null);\n  const [initialized, setInitialized] = useState(false);\n\n  const logMessage = useCallback(\n    (message: string) => {\n      if (doDebug) {\n        console.log(message);\n      }\n    },\n    [doDebug]\n  );\n\n  const sendMessage = useCallback(\n    (payload: MapMessage) => {\n      logMessage(`sending: ${JSON.stringify(payload)}`);\n\n      webViewRef.current?.injectJavaScript(\n        `window.postMessage(${JSON.stringify(payload)}, '*');`\n      );\n    },\n    [logMessage]\n  );\n\n  const sendInitialMessage = useCallback(() => {\n    let startupMessage: MapMessage = {};\n\n    if (mapLayers) {\n      startupMessage.mapLayers = mapLayers;\n    }\n    if (mapMarkers) {\n      startupMessage.mapMarkers = mapMarkers;\n    }\n    if (mapCenterPosition) {\n      startupMessage.mapCenterPosition = mapCenterPosition;\n    }\n    if (mapShapes) {\n      startupMessage.mapShapes = mapShapes;\n    }\n    if (ownPositionMarker) {\n      startupMessage.ownPositionMarker = {\n        ...ownPositionMarker,\n        id: OWN_POSTION_MARKER_ID,\n      };\n    }\n    startupMessage.zoom = zoom;\n\n    sendMessage(startupMessage);\n    setInitialized(true);\n    logMessage('sending initial message');\n  }, [\n    logMessage,\n    mapCenterPosition,\n    mapLayers,\n    mapMarkers,\n    mapShapes,\n    ownPositionMarker,\n    sendMessage,\n    zoom,\n  ]);\n\n  const handleMessage = useCallback(\n    (event: WebViewMessageEvent) => {\n      const data = event?.nativeEvent?.data;\n      if (!data) {\n        return;\n      }\n\n      const message: WebviewLeafletMessage = JSON.parse(data);\n      logMessage(`received: ${JSON.stringify(message)}`);\n\n      if (message.msg === WebViewLeafletEvents.MAP_READY) {\n        sendInitialMessage();\n      }\n      if (message.event === WebViewLeafletEvents.ON_MOVE_END) {\n        logMessage(\n          `moved to: ${JSON.stringify(message.payload?.mapCenterPosition)}`\n        );\n      }\n\n      onMessageReceived && onMessageReceived(message);\n    },\n    [logMessage, onMessageReceived, sendInitialMessage]\n  );\n\n  //Handle mapLayers update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapLayers });\n  }, [initialized, mapLayers, sendMessage]);\n\n  //Handle mapMarkers update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapMarkers });\n  }, [initialized, mapMarkers, sendMessage]);\n\n  //Handle mapShapes update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapShapes });\n  }, [initialized, mapShapes, sendMessage]);\n\n  //Handle ownPositionMarker update\n  useEffect(() => {\n    if (!initialized || !ownPositionMarker) {\n      return;\n    }\n    sendMessage({ ownPositionMarker });\n  }, [initialized, ownPositionMarker, sendMessage]);\n\n  //Handle mapCenterPosition update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ mapCenterPosition });\n  }, [initialized, mapCenterPosition, sendMessage]);\n\n  //Handle zoom update\n  useEffect(() => {\n    if (!initialized) {\n      return;\n    }\n    sendMessage({ zoom });\n  }, [initialized, zoom, sendMessage]);\n\n  return (\n    <WebView\n      containerStyle={styles.container}\n      ref={webViewRef}\n      javaScriptEnabled={true}\n      onLoadEnd={onLoadEnd}\n      onLoadStart={onLoadStart}\n      onMessage={handleMessage}\n      domStorageEnabled={true}\n      startInLoadingState={true}\n      onError={onError}\n      originWhitelist={['*']}\n      renderLoading={renderLoading}\n      source={LEAFLET_HTML_SOURCE}\n      allowFileAccess={true}\n      allowUniversalAccessFromFileURLs={true}\n      allowFileAccessFromFileURLs={true}\n      androidHardwareAccelerationDisabled={androidHardwareAccelerationDisabled}\n    />\n  );\n};\n\nLeafletView.defaultProps = {\n  renderLoading: () => <LoadingIndicator />,\n  mapLayers: DEFAULT_MAP_LAYERS,\n  zoom: DEFAULT_ZOOM,\n  doDebug: __DEV__,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...StyleSheet.absoluteFillObject,\n  },\n});\n\nexport default LeafletView;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-leaflet-view/src/LeafletView/index.tsx b/node_modules/react-native-leaflet-view/src/LeafletView/index.tsx
index da878e3..269d656 100644
--- a/node_modules/react-native-leaflet-view/src/LeafletView/index.tsx
+++ b/node_modules/react-native-leaflet-view/src/LeafletView/index.tsx
@@ -20,7 +20,7 @@ import LoadingIndicator from '../LoadingIndicator';
 
 const LEAFLET_HTML_SOURCE = Platform.select({
-  ios: require('../../android/src/main/assets/leaflet.html'),
-  android: { uri: 'file:///android_asset/leaflet.html' },
+  ios: require('../../android/src/main/assets/leaflet.html'),
+  android: require('../../android/src/main/assets/leaflet.html'),
+  web: require('../../android/src/main/assets/leaflet.html')
 });
 
 const DEFAULT_MAP_LAYERS = [
