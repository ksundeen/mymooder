set shell := ["bash", "-uc"]
set dotenv-load

project_frontend := "mymooder-frontend"
project_src := "src"
flags := env_var_or_default("JUST_FLAGS", "-eo pipefail")
thumbup := "\\U1F44D"
check := "\\U2705"
warn := "\\U26A0"
# NVM_DIR := "/root/.nvm"
nvm_dir := env_var_or_default("NVM_DIR", "$HOME/.nvm")
node_version := "20.10.0"

# Containers
docker_root := "docker"

# React Native Environmental Variables
app_name:= env_var_or_default("APP_NAME", "mymooder")
node_env := env_var_or_default("NODE_ENV", "dev")
eas_build_platform := env_var_or_default("EAS_BUILD_PLATFORM", "ios")
eas_build_profile := env_var_or_default("EAS_BUILD_PROFILE", "preview")

# Install Dependencies for the React Native Front End

# Start the React Native Front End
# install-frontend:
#     #!/usr/bin/env bash
#     set {{flags}}
#     # pushd ./{{project_frontend}}
#     just install-nvm

# Install nvm. 
ubuntu-install-nvm:
    #!/usr/bin/env bash
    set {{flags}}
    sudo apt install -y curl
    sudo curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
    export NVM_DIR="{{nvm_dir}} > "$NVM_DIR/.nvmrc"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" > "$NVM_DIR/.nvmrc"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  > "$NVM_DIR/.nvmrc"  # This loads nvm bash_completion
    
    source ~/.bashrc
    . "$NVM_DIR/nvm.sh" && nvm install {{node_version}}
    . "$NVM_DIR/nvm.sh" && nvm use v{{node_version}}
    . "$NVM_DIR/nvm.sh" && nvm alias default v{{node_version}}
    node --version > "$NVM_DIR/.nvmrc" 
    npm --version > "$NVM_DIR/.nvmrc" 

# Install nvm. 
macos-install-nvm:
    brew install curl
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
    export NVM_DIR="$HOME/.nvm" > "{{nvm_dir}}/.nvmrc"
    [ -s "{{nvm_dir}}/nvm.sh" ] && \. "{{nvm_dir}}/nvm.sh" > "{{nvm_dir}}/.nvmrc"  # This loads nvm
    [ -s "{{nvm_dir}}/bash_completion" ] && \. "{{nvm_dir}}/bash_completion"  > "{{nvm_dir}}/.nvmrc"  # This loads nvm bash_completion
    
    source ~/.zshrc
    . {{nvm_dir}}/nvm.sh && nvm install {{node_version}}
    . {{nvm_dir}}/nvm.sh && nvm use v{{node_version}}
    . {{nvm_dir}}/nvm.sh && nvm alias default v{{node_version}}
    source ~/.zshrc

    node --version > {{nvm_dir}}/.nvmrc
    npm --version > {{nvm_dir}}/.nvmrc 

# If developing through cloud expo resources, install dependencies
# This also sets the name of the project to src
expo-install:
    #!/usr/bin/env bash
    set {{flags}}
    # Sign up for expo account
    curl https://expo.dev/signup

    # Create new project 
    npx create-expo-app {{app_name}}
    #############################
    # Or Create React Native app
    # npx create-react-native-app my mooder
    ##############################

    # Supports local dev builds with either XCode or Android Studio
    npm install --save expo-dev-client

    # Plan to build with Cloud-based Expo tools
    # Install lates EAS cli
    # Installing with cloud building through Expo from https://docs.expo.dev/get-started/set-up-your-environment/?platform=ios&device=physical
    npm install --global eas-cli

    # Login into Expo Application Service (EAS)
    eas login

    # Confirm you're logged in
    eas whoami

expo-run-ios:
    #!/usr/bin/env bash
    set {{flags}}
    npx expo run ios

expo-run-android:
    #!/usr/bin/env bash
    set {{flags}}
    npx expo run android


# Configures build configurations and set environmental variables
expo-configure:
    #!/usr/bin/env bash
    set {{flags}}

    # Create Expo build configuration
    eas buid:configure

    # Enroll in the Apple Developer Program for a personal device 

# Build App to Be Transfered to a Dockerfile for deployment
expo-build:
    #!/usr/bin/env bash
    set {{flags}}
        
    # Create the build
    eas build --platform {{eas_build_platform}} --profile {{eas_build_profile}}

expo-start:
    #!/usr/bin/env bash
    set {{flags}}
    NOD_ENV={{node_env}} npx expo start

# Install React Native Sample App
react-native-install:
    #!/usr/bin/env bash
    source ~/.bashrc
    set {{flags}}
    pushd {{project_src}}

    # Install additioanal package to include sqlite storage
    npm install --save react-native-sqlite-storage
    apt install gradles


# Build production docker image
react-native-build:
    #!/usr/bin/env bash
    set {{flags}}
    pushd "{{docker_root}}"
    docker build --tag {{project_frontend}} .
